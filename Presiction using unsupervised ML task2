##                        THE SPARK FOUNDATION(GRIPNOV20)

## INTERN: STEPHEN, SAMUEL OCHOGBE

## TASK 2: PREDICT THE OPTIMUM NUMBER OF CLUSTERS AND REPRESENTING IT VISUALLY


#### import all libraries needed

import pandas as pd 
import matplotlib.pyplot as plt 
import numpy as np 
from sklearn import datasets 

iris =pd.read_csv(r"Iris.csv")
iris.head()

#### Load Datasets from Iris data file

iris = datasets.load_iris()
iris_df =pd.DataFrame(iris.data,columns= iris.feature_names)
iris_df.head()


### Finding the maximum number of clusters for K-means
#### -classify X-values
#### - using sklearn module , iterates Kmeans and find the squared average distance of the clusters to the cluster centriod(wcss)
#### - plot wcss vs number of clusters

x =iris_df.iloc[:,[0,1,2,3]].values
from sklearn.cluster import KMeans
wcss =[]
for i in range(1,11):
    
    kmeans = KMeans(n_clusters= i, init='k-means++', max_iter=300,n_init=10, random_state= 0)
    kmeans.fit(x)
    wcss.append(kmeans.inertia_)

plt.plot(range(1,11),wcss)
plt.title('The elbow method')
plt.xlabel('number of clusters')
plt.ylabel('wcss')
plt.show()
    


### Below the curve is an elbow, at this region we have maximum cluster point

## Applying kmeans to datasets


kmeans = KMeans(n_clusters = 3, init = 'k-means++',
                max_iter = 300, n_init = 10, random_state = 0)
y_kmeans = kmeans.fit_predict(x)



### Visualising the clusters on the first two columns

plt.scatter(x[y_kmeans == 0, 0], x[y_kmeans == 0, 1], 
            s = 100, c = 'red', label = 'Iris-setosa')
plt.scatter(x[y_kmeans == 1, 0], x[y_kmeans == 1, 1], 
            s = 100, c = 'blue', label = 'Iris-versicolour')
plt.scatter(x[y_kmeans == 2, 0], x[y_kmeans == 2, 1],
            s = 100, c = 'green', label = 'Iris-virginica')

plt.scatter(kmeans.cluster_centers_[:, 0], kmeans.cluster_centers_[:,1], 
            s = 100, c = 'yellow', label = 'Centroids')

plt.legend()

from the plot above we can see optimum number of clusters predicted about the centriod.

